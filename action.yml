name: "Cache Dependencies"

description: "Setup Python with pip Cache and Install Dependencies"

inputs:
  dependencies-directory:
    description: Where to search for requirements files.
    required: false
    default: "."
    type: string

  python-version:
    description: What python version to use.
    required: false
    default: "3.10"
    type: string

  application:
    description: Whether to install application dependencies.
    required: false
    default: false
    type: boolean

  quality:
    description: Whether to install quality assurance dependencies.
    required: false
    default: false
    type: boolean

  security:
    description: Whether to install security dependencies.
    required: false
    default: false
    type: boolean

  test:
    description: Whether to install test dependencies.
    required: false
    default: false
    type: boolean

runs:
  using: "composite"
  steps:
    - name: Output Config
      run: |
        echo "Install Application: ${{ inputs.application }}"
        echo "Install Quality: ${{ inputs.quality }}"
        echo "Install Security: ${{ inputs.security }}"
        echo "Install Test: ${{ inputs.test }}"
      shell: bash

    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Python and Pip Cache
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"
        cache-dependency-path: |
          **/requirements*.txt
          **/setup.py

    - name: Install Application Dependencies
      if: inputs.application == 'true'
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f ./requirements.txt ]; then pip install -r ./requirements.txt; fi
      shell: bash
      working-directory: ${{ inputs.dependencies-directory }}

    - name: Install QA Dependencies
      if: inputs.quality  == 'true'
      run: |
        pip install --upgrade isort black mypy flake8 pylint
        if [ -f ./requirements-qa.txt ]; then pip install -r ./requirements-qa.txt; fi
      shell: bash
      working-directory: ${{ inputs.dependencies-directory }}

    - name: Install Security Dependencies
      if: inputs.security  == 'true'
      run: |
        pip install --upgrade bandit
        if [ -f ./requirements-sec.txt ]; then pip install -r ./requirements-sec.txt; fi
      shell: bash
      working-directory: ${{ inputs.dependencies-directory }}

    - name: Install Test Dependencies
      if: inputs.test  == 'true'
      run: |
        pip install --upgrade pytest pytest-cov
        if [ -f ./requirements-test.txt ]; then pip install -r ./requirements-test.txt; fi
      shell: bash
      working-directory: ${{ inputs.dependencies-directory }}
